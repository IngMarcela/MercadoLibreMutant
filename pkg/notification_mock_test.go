// Code generated by mockery v2.14.0. DO NOT EDIT.

package pkg

import mock "github.com/stretchr/testify/mock"

// NotificationMock is an autogenerated mock type for the NotificationInterface type
type NotificationMock struct {
	mock.Mock
}

// SendNotification provides a mock function with given fields: mutant
func (_m *NotificationMock) SendNotification(mutant string) error {
	ret := _m.Called(mutant)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(mutant)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewNotificationMock interface {
	mock.TestingT
	Cleanup(func())
}

// NewNotificationMock creates a new instance of NotificationMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewNotificationMock(t mockConstructorTestingTNewNotificationMock) *NotificationMock {
	mock := &NotificationMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
